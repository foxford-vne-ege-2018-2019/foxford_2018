использовать Рисователь
цвет цвет_фона = белый
цел таб palette[0:9, 0:2] 
цел таб спрайт[0:15, 0:15]
цел таб маска_спрайта[0:15, 0:15]

вещ dt = 0.03 | расчётное время в секундах
вещ scale = 100 | пикселей на метр
цел ширина = 350
цел высота = 450
цел размер_спрайта = 30

алг главный
нач
новый лист(ширина, высота, белый)
инициализация_палитры
загрузить_спрайт("птичка.txt", спрайт)
загрузить_спрайт("белая_птичка.txt", маска_спрайта)
игровой_цикл
кон

алг игровой_цикл
нач
вещ x, y, Vx, Vy, m
m := 1
x := 0; y := 1
Vx := 2; Vy := 7
нц
| отображение                            
отобразить_спрайт(x, y, Vx, Vy, спрайт)
ждать(60)
отобразить_спрайт(x, y, Vx, Vy, маска_спрайта)

| расчёт новых координат:
перерасчёт_координат_и_скоростей(x, y, Vx, Vy, m)
кц
кон

алг перерасчёт_координат_и_скоростей(аргрез вещ x, вещ y, вещ Vx, вещ Vy, вещ m)
нач
вещ ax, ay

ax := Fx / m
ay := Fy / m
x := x + Vx*dt + ax*dt*dt/2
y := y + Vy*dt + ay*dt*dt/2
Vx := Vx + ax*dt
Vy := Vy + ay*dt
если y < 0 то
y := 0
Vy := -Vy
все
если x < 0 или x > 3.5 то
Vx := -Vx
все
кон


алг вещ Fx
нач
знач := 0
кон

алг вещ Fy
нач
знач := -10 | ньютонов
кон

алг цел screen_x(вещ x)
нач
знач := int(x*scale)
кон

алг цел screen_y(вещ y)
нач
знач := int(высота - y*scale)
кон

алг отобразить_спрайт(вещ x, вещ y, вещ Vx, вещ Vy, цел таб спрайт[0:15, 0:15])
нач
цел nx, ny, x0, y0
вещ V
x0 := screen_x(x) - div(размер_спрайта, 2)
y0 := screen_y(y) - div(размер_спрайта, 2)
V := sqrt(Vx*Vx + Vy*Vy)
nx := int(размер_спрайта*Vx/V)
ny := int(-размер_спрайта*Vy/V)
гомотетия_спрайта(x0, y0, nx, ny, -ny, nx, спрайт)
кон

алг гомотетия_спрайта(цел x0, цел y0, цел ax, цел ay, цел bx, цел by, цел таб спрайт[0:15, 0:15])
нач
цел xi, yi, x, y, rx, ry
цел x_min, x_max, y_min, y_max
цвет color
вещ alpha, beta

x_min := imin(imin(x0, x0 + ax), imin(x0 + bx, x0 + ax + bx))
x_max := imax(imax(x0, x0 + ax), imax(x0 + bx, x0 + ax + bx))
y_min := imin(imin(y0, y0 + ay), imin(y0 + by, y0 + ay + by))
y_max := imax(imax(y0, y0 + ay), imax(y0 + by, y0 + ay + by))
нц для x от x_min до x_max
нц для y от y_min до y_max
rx := x - x0
ry := y - y0
alpha := (rx*by - ry*bx) / (ax*by - ay*bx)  
beta := (ry*ax - rx*ay) / (ax*by - ay*bx)
если alpha >= 0 и beta >= 0 и alpha < 1 и beta < 1
то | это условие "попадания" точки в спрайт
xi := int(16 * alpha)
yi := int(16 * beta)
color := цвет_палитры(спрайт[yi, xi])
пиксель(x, y, color)
все
кц
кц
кон

алг загрузить_спрайт(лит имя_файла, рез цел таб спрайт[0:15, 0:15])
нач
файл файл_со_спрайтом 
файл_со_спрайтом := открыть на чтение(имя_файла)
цел i, k
нц для i от 0 до 15
нц для k от 0 до 15
ввод файл_со_спрайтом, спрайт[i, k]
кц
кц
закрыть(файл_со_спрайтом)
кон

алг инициализация_палитры
нач
цел r, g, b, i
разложить в RGB(прозрачный, r, g, b)
i := 0; palette[i, 0] := r; palette[i, 1] := g; palette[i, 2] := b  
разложить в RGB(чёрный, r, g, b)
i := 1; palette[i, 0] := r; palette[i, 1] := g; palette[i, 2] := b  
разложить в RGB(красный, r, g, b)
i := 2; palette[i, 0] := r; palette[i, 1] := g; palette[i, 2] := b  
разложить в RGB(зелёный, r, g, b)
i := 3; palette[i, 0] := r; palette[i, 1] := g; palette[i, 2] := b  
разложить в RGB(синий, r, g, b)
i := 4; palette[i, 0] := r; palette[i, 1] := g; palette[i, 2] := b  
разложить в RGB(жёлтый, r, g, b)
i := 5; palette[i, 0] := r; palette[i, 1] := g; palette[i, 2] := b  
разложить в RGB(оранжевый, r, g, b)
i := 6; palette[i, 0] := r; palette[i, 1] := g; palette[i, 2] := b  
разложить в RGB(фиолетовый, r, g, b)
i := 7; palette[i, 0] := r; palette[i, 1] := g; palette[i, 2] := b  
разложить в RGB(серый, r, g, b)
i := 8; palette[i, 0] := r; palette[i, 1] := g; palette[i, 2] := b  
разложить в RGB(белый, r, g, b)
i := 9; palette[i, 0] := r; palette[i, 1] := g; palette[i, 2] := b
кон

алг цвет цвет_палитры(цел i)
нач
если i = 0 то
знач := прозрачный
иначе
знач := RGB(palette[i, 0], palette[i, 1], palette[i, 2])
все
кон


