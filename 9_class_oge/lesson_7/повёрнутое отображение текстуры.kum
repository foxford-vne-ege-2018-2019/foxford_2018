использовать Рисователь
цвет цвет_фона = белый
цел таб palette[0:9, 0:2] 
цел таб спрайт[0:15, 0:15]

алг главный
нач
новый лист(150, 150, цвет_фона)
инициализация_палитры
загрузить_спрайт("спрайт.txt", спрайт)

вещ ax, ay, bx, by, угол, длина
цел x0, y0, t

нц для t от 0 до 360 шаг 15 
x0 := 74
y0 := 74
угол := t*3.141592/180
длина := 50
ax := длина*cos(угол)
ay := длина*sin(угол)
bx := длина*cos(угол+3.141592/2)
by := длина*sin(угол+3.141592/2)
новый лист(150, 150, цвет_фона)
гомотетия_спрайта(x0, y0, int(ax), int(ay), int(bx), int(by), спрайт)
ждать(100)
кц
кон

алг гомотетия_спрайта(цел x0, цел y0, цел ax, цел ay, цел bx, цел by, цел таб спрайт[0:15, 0:15])
нач
цел xi, yi, x, y, rx, ry
цел x_min, x_max, y_min, y_max
цвет color
вещ alpha, beta

x_min := imin(imin(x0, x0 + ax), imin(x0 + bx, x0 + ax + bx))
x_max := imax(imax(x0, x0 + ax), imax(x0 + bx, x0 + ax + bx))
y_min := imin(imin(y0, y0 + ay), imin(y0 + by, y0 + ay + by))
y_max := imax(imax(y0, y0 + ay), imax(y0 + by, y0 + ay + by))
нц для x от x_min до x_max
нц для y от y_min до y_max
rx := x - x0
ry := y - y0
alpha := (rx*by - ry*bx) / (ax*by - ay*bx)  
beta := (ry*ax - rx*ay) / (ax*by - ay*bx)
если alpha >= 0 и beta >= 0 и alpha < 1 и beta < 1
то | это условие "попадания" точки в спрайт
xi := int(16 * alpha)
yi := int(16 * beta)
color := цвет_палитры(спрайт[yi, xi])
пиксель(x, y, color)
все
кц
кц
кон


алг загрузить_спрайт(лит имя_файла, рез цел таб спрайт[0:15, 0:15])
нач
файл файл_со_спрайтом 
файл_со_спрайтом := открыть на чтение(имя_файла)
цел i, k
нц для i от 0 до 15
нц для k от 0 до 15
ввод файл_со_спрайтом, спрайт[i, k]
кц
кц
закрыть(файл_со_спрайтом)
кон

алг вывести_спрайт(цел x0, цел y0, цел таб спрайт[0:15, 0:15])
нач
цвет цвет_пикселя
цел x, y
нц для y от 0 до 15
нц для x от 0 до 15
цвет_пикселя := цвет_палитры(спрайт[y, x])
если цвет_пикселя <> прозрачный то
пиксель(x0 + x, y0 + y, цвет_пикселя)
все
кц
кц
кон

алг инициализация_палитры
нач
цел r, g, b, i
разложить в RGB(прозрачный, r, g, b)
i := 0; palette[i, 0] := r; palette[i, 1] := g; palette[i, 2] := b  
разложить в RGB(чёрный, r, g, b)
i := 1; palette[i, 0] := r; palette[i, 1] := g; palette[i, 2] := b  
разложить в RGB(красный, r, g, b)
i := 2; palette[i, 0] := r; palette[i, 1] := g; palette[i, 2] := b  
разложить в RGB(зелёный, r, g, b)
i := 3; palette[i, 0] := r; palette[i, 1] := g; palette[i, 2] := b  
разложить в RGB(синий, r, g, b)
i := 4; palette[i, 0] := r; palette[i, 1] := g; palette[i, 2] := b  
разложить в RGB(жёлтый, r, g, b)
i := 5; palette[i, 0] := r; palette[i, 1] := g; palette[i, 2] := b  
разложить в RGB(оранжевый, r, g, b)
i := 6; palette[i, 0] := r; palette[i, 1] := g; palette[i, 2] := b  
разложить в RGB(фиолетовый, r, g, b)
i := 7; palette[i, 0] := r; palette[i, 1] := g; palette[i, 2] := b  
разложить в RGB(серый, r, g, b)
i := 8; palette[i, 0] := r; palette[i, 1] := g; palette[i, 2] := b  
разложить в RGB(белый, r, g, b)
i := 9; palette[i, 0] := r; palette[i, 1] := g; palette[i, 2] := b
кон

алг цвет цвет_палитры(цел i)
нач
если i = 0 то
знач := прозрачный
иначе
знач := RGB(palette[i, 0], palette[i, 1], palette[i, 2])
все
кон


